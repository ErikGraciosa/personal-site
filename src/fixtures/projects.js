/* eslint-disable max-len */
import realo from '../images/realo.png';
import poolParty from '../images/poolparty.png';
import map from '../images/map.png';
import tictactoe from '../images/tictactoe.png';

export const projects = [
  {
    title: 'REALO',
    image: realo,
    livesite: 'https://realo.herokuapp.com/',
    githubFE: null,
    githubBE: 'https://github.com/ET-Phone-Home-Alchemy/realo-app-backend',
    stack: ['Javascript',
      'CSS',
      'HTML',
      'PUG',
      'NodeJS',
      'Express',
      'PostgreSQL'],
    keyLibraries: ['cheerio',
      'nodemailer',
      'superagent-throttle',
      'bcryptjs'],
    description: `A back-end webscraper notifying users of new real estate via SMS, based on user entered filters. Deployed on Heroku with server side rendering. Built in a one week sprint with four developers remotely via Zoom.`,
    contributions: ['Set up user authentication, user filter input form, and user model writing to PostgreSQL database.', 'Enabled constant integration via Github and Heroku for a dev and production site with CI deploy-constraints.', 'Sketched wireframe mockups and built endpoint addressing of PUG server-side rendered views for users to enter and view filters.'],
  },
  {
    title: 'Git-There',
    image: map,
    livesite: 'https://git-there-api.netlify.app/',
    githubFE: 'https://github.com/gitThere-API/gitthere-api-fe',
    githubBE: 'https://github.com/gitThere-API/gitthere-api-be',
    stack: ['Javascript',
      'CSS',
      'HTML',
      'React',
      'NodeJS',
      'Express',
      'PostgreSQL'],
    keyLibraries: ['google-maps-react',
      'superagent',
      'bcryptjs'],
    description: 'A transportation aggregating app visualizing Nike/Lime/Spin scooters and Trimet bus stops using a Google Maps React element and deployed on Netlify.',
    contributions: ['Led team in one week sprint from sandbox idea to user-stories to dev tickets.', 'Built Trimet details page to navigate to bus stop details from user click on map icon using Trimet API.', 'Wrote munging functions to pass on location data from JSON and filter scooters within 300 meters.'],
  },
  {
    title: 'Pool Party',
    image: poolParty,
    livesite: 'https://stripe-pool-party.netlify.app/',
    githubFE: 'https://github.com/alchemy-final-project/pool-party-fe',
    githubBE: 'https://github.com/alchemy-final-project/pool-party-be',
    stack: ['Javascript',
      'CSS',
      'HTML',
      'React',
      'NodeJS',
      'Express',
      'PostgreSQL'],
    keyLibraries: ['StripeAPI'],
    description: 'A Stripe enabled payment system for enabling multiparty payments to one reciever. Payments going through Stripe\'s test environment',
    contributions: ['Wrote logic for holding payment intent secrets from Stripe then confirming payments after all party\'s in pool had paid.', 'Using custom hooks to fetch from database and a Model/Container/View architecture.'],
  },
  {
    title: 'Tic-Tac-Toe',
    image: tictactoe,
    livesite: 'sformichella.github.io/t4-xoxo/',
    githubFE: 'https://github.com/sformichella/t4-xoxo',
    githubBE: null,
    stack: ['Vanilla Javascript',
      'CSS',
      'HTML',
      'LocalStorage',
    ],
    keyLibraries: ['ChartJS'],
    description: 'A one-player versus computer tic tac toe game saving game state and games played history to LocalStorage.',
    contributions: ['Defined gameboard to an object saved in LocalStorage.', 'Using the saved game play object, displayed charts to user showing games played and results.'],
  }
];

